
#user  nobody;
user  ouyangjie;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  debug;

load_module /usr/local/nginx/modules/ngx_http_redis2_module.so;
load_module /usr/local/nginx/modules/ndk_http_module.so;
load_module /usr/local/nginx/modules/ngx_http_set_misc_module.so;

#pid        logs/nginx.pid;
#for debug
daemon off;
master_process off;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #mysql {
	#host localhost;
	#port 3306;
    #}
    mysql_host localhost;
    mysql_port 3306;
    mysql_user_name root;
    mysql_user_pwd 123456;
    mysql_db_name customer;

    redis_host localhost;
    redis_port 6379;
    redis_pwd 123456;

    wx_ma_appid wxaa407a0bd72f899b;
    wx_ma_secret 31f6efd9f89df7741145f03c8720caf5;

    #gzip  on;
    upstream redis_server {
        server localhost:6379;

        # a pool with at most 1024 connections
        # and do not distinguish the servers:
        keepalive 1024;
    }

    upstream mysql_server {
         drizzle_server 127.0.0.1:3306 dbname=customer
              password=123456 user=root protocol=mysql;
     }

    server {
        listen       80;
        server_name  localhost;

    	listen       443;
	server_name  localhost;
	ssl          on;
    	ssl_certificate      /home/ouyangjie/work/code/nginx_dev/nginx_http_backend/ca/ssl.crt;
	ssl_certificate_key  /home/ouyangjie/work/code/nginx_dev/nginx_http_backend/ca/ssl.key;

	ssl_session_timeout  5m;

	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;


        location / {
            root   html;
            index  index.html index.htm;
        }

        location /test {
            root   /home/ouyangjie;
            index  index.html index.htm;
        }
	
        location = /customerManager/login {
            login;
        }

	
        location = /wxMiniBuyPhone/login {
            proxy_pass https://api.weixin.qq.com/sns/jscode2session;
	    #不希望上游服务器的头部进行gzip压缩
            proxy_set_header  Accept-Encoding  "";	
        }

        location /changepwd {
		proxy_pass http://192.168.1.198:8091/api/mqttploy/service/changePassword;
		#proxy_pass http://192.168.1.198:8091;
		proxy_set_header Host $host;
		proxy_method POST;
	}
        
	location /redis_set {
		 redis2_next_upstream error timeout invalid_response;
	         set_unescape_uri $key $arg_key;  # this requires ngx_set_misc
	         set_unescape_uri $val $arg_value;  # this requires ngx_set_misc
	         set_unescape_uri $pwd $arg_pwd;  # this requires ngx_set_misc
	         redis2_query auth $pwd;
	         redis2_query set $key $val;
	         redis2_pass redis_server;
        }
	
	location /redis_get {
		set_unescape_uri $key $arg_key;  # this requires ngx_set_misc
		set_unescape_uri $pwd $arg_pwd;  # this requires ngx_set_misc
	        redis2_query auth $pwd;
	        redis2_query get $key;
	        redis2_pass redis_server;
	}
	
	location /redis_cmds {
		 redis2_next_upstream error timeout invalid_response;
	         set_unescape_uri $n $arg_n;  # this requires ngx_set_misc
	         set_unescape_uri $cmds $arg_cmds;  # this requires ngx_set_misc
		 redis2_raw_queries $n $cmds;
        	 redis2_pass redis_server; 
        }

	location /mysql {
             set $my_sql 'select * from customer_info';
             drizzle_query $my_sql;

             drizzle_pass mysql_server;

             drizzle_connect_timeout    500ms; # default 60s
             drizzle_send_query_timeout 2s;    # default 60s
             drizzle_recv_cols_timeout  1s;    # default 60s
             drizzle_recv_rows_timeout  1s;    # default 60s
	     rds_json on;
         }
	
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    #server {
	#location /app {
	 #   mytest;
	#}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
