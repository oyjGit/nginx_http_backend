////////////////////////////////////////////////////////////////////////////////
// NOTE : Generated by slothjson. It is NOT supposed to modify this file.
////////////////////////////////////////////////////////////////////////////////
#ifndef __wxsessioninfo_20180604220905_h__
#define __wxsessioninfo_20180604220905_h__

#include "slothjson.h"

using namespace slothjson;

struct WXSessionInfo
{
    std::string session_key;
    std::string openid;
    std::string unionid;
    int32_t expires_in;

    void skip_session_key() { __skip_session_key = true; }
    void skip_openid() { __skip_openid = true; }
    void skip_unionid() { __skip_unionid = true; }
    void skip_expires_in() { __skip_expires_in = true; }

    bool json_has_session_key() const { return __json_has_session_key; }
    bool json_has_openid() const { return __json_has_openid; }
    bool json_has_unionid() const { return __json_has_unionid; }
    bool json_has_expires_in() const { return __json_has_expires_in; }

    WXSessionInfo();
    WXSessionInfo& operator=(const WXSessionInfo& obj_val);
    bool operator==(const WXSessionInfo& obj_val) const;
    bool encode(allocator_t& alloc, rapidjson::Value& json_val) const;
    bool decode(const rapidjson::Value& json_val);

private:
    bool __skip_session_key;
    bool __skip_openid;
    bool __skip_unionid;
    bool __skip_expires_in;

    bool __json_has_session_key;
    bool __json_has_openid;
    bool __json_has_unionid;
    bool __json_has_expires_in;
};

bool encode(const WXSessionInfo& obj_val, allocator_t& alloc, rapidjson::Value& json_val);
bool decode(const rapidjson::Value& json_val, WXSessionInfo& obj_val);


#endif // __wxsessioninfo_20180604220905_h__